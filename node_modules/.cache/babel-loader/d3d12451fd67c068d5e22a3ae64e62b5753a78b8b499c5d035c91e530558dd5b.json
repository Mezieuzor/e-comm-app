{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"192\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"140\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"140\",\n    r: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 176 128 192 112 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"49.9\",\n    x2: \"108\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"49.9\",\n    x2: \"148\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"192\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"140\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"140\",\n    r: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 176 128 192 112 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"53\",\n    x2: \"96\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"53\",\n    x2: \"160\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M221.4,36.3a16.3,16.3,0,0,0-17,4L187.5,57.2a111.5,111.5,0,0,0-119,0L51.6,40.3a16.3,16.3,0,0,0-17-4A15.9,15.9,0,0,0,24,51.3V136c0,49.1,40.1,89.6,91.6,95.3a4,4,0,0,0,4.4-4v-32l-13.4-13.4a8.3,8.3,0,0,1-.4-11.4,8.1,8.1,0,0,1,11.5-.2L128,180.7l10.3-10.4a8.1,8.1,0,0,1,11.5.2,8.3,8.3,0,0,1-.4,11.4L136,195.3v32a4,4,0,0,0,4.4,4c51.5-5.7,91.6-46.2,91.6-95.3V51.3A15.9,15.9,0,0,0,221.4,36.3ZM84,152a12,12,0,1,1,12-12A12,12,0,0,1,84,152Zm20-64a8,8,0,0,1-16,0V69a8,8,0,0,1,16,0Zm32,0a8,8,0,0,1-16,0V64a8,8,0,0,1,16,0Zm16,0V69a8,8,0,0,1,16,0V88a8,8,0,0,1-16,0Zm20,64a12,12,0,1,1,12-12A12,12,0,0,1,172,152Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"192\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"140\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"140\",\n    r: \"10\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 176 128 192 112 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"53\",\n    x2: \"96\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"53\",\n    x2: \"160\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"192\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"140\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"140\",\n    r: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 176 128 192 112 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"53\",\n    x2: \"96\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"53\",\n    x2: \"160\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"192\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"140\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"140\",\n    r: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 176 128 192 112 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"53\",\n    x2: \"96\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160\",\n    y1: \"53\",\n    x2: \"160\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar Cat = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCat.displayName = \"Cat\";\nexport default Cat;","map":{"version":3,"names":["pathsByWeight","Map","set","color","React","createElement","Fragment","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","points","d","opacity","renderPath","weight","renderPathForWeight","Cat","forwardRef","props","ref","IconBase","Object","assign","displayName"],"sources":["/home/hpproc640/e-commerce-shopping-cart-app/node_modules/phosphor-react/src/icons/Cat.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"192\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"84\" cy=\"140\" r=\"16\" />\n    <circle cx=\"172\" cy=\"140\" r=\"16\" />\n    <polyline\n      points=\"144 176 128 192 112 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"49.9\"\n      x2=\"108\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"49.9\"\n      x2=\"148\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"192\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"84\" cy=\"140\" r=\"12\" />\n    <circle cx=\"172\" cy=\"140\" r=\"12\" />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 176 128 192 112 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"53\"\n      x2=\"96\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"53\"\n      x2=\"160\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M221.4,36.3a16.3,16.3,0,0,0-17,4L187.5,57.2a111.5,111.5,0,0,0-119,0L51.6,40.3a16.3,16.3,0,0,0-17-4A15.9,15.9,0,0,0,24,51.3V136c0,49.1,40.1,89.6,91.6,95.3a4,4,0,0,0,4.4-4v-32l-13.4-13.4a8.3,8.3,0,0,1-.4-11.4,8.1,8.1,0,0,1,11.5-.2L128,180.7l10.3-10.4a8.1,8.1,0,0,1,11.5.2,8.3,8.3,0,0,1-.4,11.4L136,195.3v32a4,4,0,0,0,4.4,4c51.5-5.7,91.6-46.2,91.6-95.3V51.3A15.9,15.9,0,0,0,221.4,36.3ZM84,152a12,12,0,1,1,12-12A12,12,0,0,1,84,152Zm20-64a8,8,0,0,1-16,0V69a8,8,0,0,1,16,0Zm32,0a8,8,0,0,1-16,0V64a8,8,0,0,1,16,0Zm16,0V69a8,8,0,0,1,16,0V88a8,8,0,0,1-16,0Zm20,64a12,12,0,1,1,12-12A12,12,0,0,1,172,152Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"192\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"84\" cy=\"140\" r=\"10\" />\n    <circle cx=\"172\" cy=\"140\" r=\"10\" />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"144 176 128 192 112 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"53\"\n      x2=\"96\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"53\"\n      x2=\"160\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"192\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"84\" cy=\"140\" r=\"8\" />\n    <circle cx=\"172\" cy=\"140\" r=\"8\" />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"144 176 128 192 112 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"53\"\n      x2=\"96\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"53\"\n      x2=\"160\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"192\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"84\" cy=\"140\" r=\"12\" />\n    <circle cx=\"172\" cy=\"140\" r=\"12\" />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 176 128 192 112 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"53\"\n      x2=\"96\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"53\"\n      x2=\"160\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M32,136V51.3a8,8,0,0,1,13.7-5.6L67.6,67.6h0A100.8,100.8,0,0,1,128,48a100.8,100.8,0,0,1,60.4,19.6h0l21.9-21.9A8,8,0,0,1,224,51.3V136c0,48.6-43,88-96,88S32,184.6,32,136Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Cat = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCat.displayName = \"Cat\";\n\nexport default Cat;\n"],"mappings":";;;;AAAA;AAWA,IAAMA,aAAa,gBAAG,IAAIC,GAAJ,EAAtB;AAEAD,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;EAAA,OACxBC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CADF,EAYEX,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAKC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA3B,CAZF,EAaEd,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAMC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA5B,CAbF,EAcEd,KAAA,CAAAC,aAAA;IACEc,MAAM,EAAC;IACPR,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAdF,EAsBEX,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFT,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAtBF,EA8BEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CA9BF,EAyCEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAzCF,CADwB;AAAA,CAA1B;AAwDAf,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;EAAA,OAC3BC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFC,OAAO,EAAC;GAFV,CADF,EAKEjB,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CALF,EAgBEX,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAKC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA3B,CAhBF,EAiBEd,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAMC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA5B,CAjBF,EAkBEd,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAlBF,EA6BEX,KAAA,CAAAC,aAAA;IACEc,MAAM,EAAC;IACPR,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CA7BF,EAqCEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CArCF,EAgDEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAhDF,EA2DEX,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFT,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CA3DF,CAD2B;AAAA,CAA7B;AAuEAf,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B;EAAA,OACxBE,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IAAMe,CAAC,EAAC;GAAR,CADF,CADwB;AAAA,CAA1B;AAMApB,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2B,UAACC,KAAD;EAAA,OACzBC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CADF,EAYEX,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAKC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA3B,CAZF,EAaEd,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAMC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA5B,CAbF,EAcEd,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAdF,EAyBEX,KAAA,CAAAC,aAAA;IACEc,MAAM,EAAC;IACPR,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,EAiCEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAjCF,EA4CEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CA5CF,EAuDEX,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFT,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAvDF,CADyB;AAAA,CAA3B;AAmEAf,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;EAAA,OACxBC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CADF,EAYEX,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAKC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA3B,CAZF,EAaEd,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAMC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA5B,CAbF,EAcEd,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAdF,EAyBEX,KAAA,CAAAC,aAAA;IACEc,MAAM,EAAC;IACPR,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,EAiCEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAjCF,EA4CEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CA5CF,EAuDEX,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFT,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAvDF,CADwB;AAAA,CAA1B;AAmEAf,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;EAAA,OAC3BC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACEF,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CADF,EAYEX,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAKC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA3B,CAZF,EAaEd,KAAA,CAAAC,aAAA;IAAQW,EAAE,EAAC;IAAMC,EAAE,EAAC;IAAMC,CAAC,EAAC;GAA5B,CAbF,EAcEd,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAdF,EAyBEX,KAAA,CAAAC,aAAA;IACEc,MAAM,EAAC;IACPR,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAzBF,EAiCEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CAjCF,EA4CEX,KAAA,CAAAC,aAAA;IACEE,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,EAAE,EAAC;IACHC,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GATd,CA5CF,EAuDEX,KAAA,CAAAC,aAAA;IACEe,CAAC,EAAC;IACFT,IAAI,EAAC;IACLC,MAAM,EAAET,KAAA;IACRU,aAAa,EAAC;IACdC,cAAc,EAAC;IACfC,WAAW,EAAC;GANd,CAvDF,CAD2B;AAAA,CAA7B;AAmEA,IAAMO,UAAU,GAAmB,SAA7BA,UAA6BA,CAACC,MAAD,EAAqBpB,KAArB;EAAA,OACjCqB,mBAAmB,CAACD,MAAD,EAASpB,KAAT,EAAgBH,aAAhB,CADc;AAAA,CAAnC;AAGA,IAAMyB,GAAG,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;EAAA,OAC/CxB,KAAA,CAAAC,aAAA,CAACwB,QAAD,EAAAC,MAAA,CAAAC,MAAA;IAAUH,GAAG,EAAEA;KAASD,KAAA;IAAOL,UAAU,EAAEA;IAA3C,CAD+C;AAAA,CAA3B,CAAtB;AAIAG,GAAG,CAACO,WAAJ,GAAkB,KAAlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}